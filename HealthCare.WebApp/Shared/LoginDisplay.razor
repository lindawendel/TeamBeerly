@using HealthCare.Core.Models
@using System.Security.Claims
@using HealthCare.Core.Data;
@using Microsoft.EntityFrameworkCore
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthenticationService AuthenticationService
@inject HealthCareContext DbContext
@inject NavigationManager NavigationManager

<div>
    @if (currentUser?.Identity?.IsAuthenticated ?? false)
    {
        <span>You are logged in as: @currentUser.Identity.Name</span>
        <button @onclick="Logout">Logout</button>
    }
    else
    {
        <button @onclick="Login">Login</button>
    }
</div>

@code {
    private ClaimsPrincipal currentUser;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        currentUser = authState.User;

        if (currentUser.Identity.IsAuthenticated)
        {
            var email = currentUser.FindFirst(c => c.Type == ClaimTypes.Email)?.Value;
            var name = currentUser.FindFirst(c => c.Type == ClaimTypes.Name)?.Value;

            
            var patient = await DbContext.Patients
                .AsNoTracking() 
                .FirstOrDefaultAsync(p => p.Email == email);

            if (patient == null)
            {        
                patient = new Patient
                    {
                        Id = Guid.NewGuid(),
                        Email = email,
                        Name = name,
                        Appointments = new List<Appointment>()
                    };

                DbContext.Patients.Add(patient);
            }
            else
            {
                patient.Name = name;
            }

            await DbContext.SaveChangesAsync();
        }
    }

    private async Task Login()
    {
        await AuthenticationService.Login();
    }

    private async Task Logout()
    {
        await AuthenticationService.Logout();
    }
}
