@page "/dashboard"
@attribute [Authorize]
@inject HealthCareContext DbContext
@inject AuthenticationStateProvider AuthenticationStateProvider

@if (Caregiver != null)
{

    <h3>My Page</h3>

    <div>
        <h5>Schedule</h5>
        <NavLink class="nav-link" href="Caregiver_CalendarView">Manage Availability</NavLink>
    </div>

    @* <div class="upcomingApointments">
    <h5>Upcoming Appointments</h5>
</div>

<div class="pastAppointments">
    <h5>Past Appointments</h5>
</div> *@

    @if (!string.IsNullOrEmpty(profileImage))
    {
        <img src="@profileImage
        " alt="Profile Image" />
    }

    <div class="profile">
        <h5>Profile</h5>
        <label>@Caregiver.Role: @Caregiver?.Name</label>
        <label>Date of Birth: @Caregiver.DateOfBirth</label>
        <label>Phone Number: @Caregiver.PhoneNumber</label>
        <label>Email: @Caregiver.Email</label>
        <NavLink class="nav-link" href="profile"> Edit Profile </NavLink>
    </div>

    @if (upcomingAppointments.Count > 0)
    {
        <div class="upcomingPatientAppointments">
            <h5>Upcoming Appointments</h5>
            <ol>
                @foreach (var appointment in upcomingAppointments)
                {
                    <li>
                        <p>Date & Time: @appointment.StartTime</p>
                        <p>Patient: @appointment.Patient.Name</p>
                        <p>Service: @appointment.Service</p>
                        <p>Description: @appointment.Description</p>
                        <p><NavLink class="nav-link" href="dashboard"> Cancel appointment </NavLink></p>
                    </li>
                }
            </ol>
        </div>
    }

    @if (pastAppointments.Count > 0)
    {
        <div class="pastPatientAppointments">
            <h5>Past Appointments</h5>
            <ol>
                @foreach (var appointment in pastAppointments)
                {
                    <li>
                        <p>Date & Time: @appointment.StartTime</p>
                        <p>Caregiver: @appointment.Caregiver.Name</p>
                        <p> @appointment.Service</p>
                    </li>
                }
            </ol>
        </div>
    }
}
else
{
    <p>NO ACCESS</p>
}

@code {
    private string profileImage;
    private List<Appointment> upcomingAppointments = new List<Appointment>();
    private List<Appointment> pastAppointments = new List<Appointment>();
    private Caregiver Caregiver;

    protected override void OnInitialized()
    {
        SeedData();
        FetchUserDetails();
        GetAppointments();
    }

    private async Task FetchUserDetails()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        var userId = authState.User.Claims
                   .Where(c => c.Type.Equals(ClaimTypes.NameIdentifier))
                   .Select(c => c.Value)
                   .FirstOrDefault() ?? string.Empty;

        profileImage = authState.User.Claims.FirstOrDefault(c => c.Type == "picture")?.Value ?? string.Empty;

        GetCaregiver(userId);
    }

    private void GetCaregiver(string authId)
    {
        Caregiver = DbContext.Caregivers.FirstOrDefault(p => p.Auth0Id == authId);
    }

    private void GetAppointments()
    {
        var now = DateTime.Now;

        if (Caregiver != null)
        {
            upcomingAppointments = DbContext.Appointments
                .Where(a => a.StartTime > now && a.Caregiver.Id == Caregiver.Id && a.IsBooked == true)
                .Include(a => a.Patient)
                .OrderBy(a => a.StartTime)
                .ToList();

            pastAppointments = DbContext.Appointments
                .Where(a => a.StartTime < now && a.Caregiver.Id == Caregiver.Id && a.IsBooked == true)
                .Include(a => a.Patient)
                .OrderByDescending(a => a.StartTime)
                .ToList();
        }
    }

    private void SeedData()
    {
        if (!DbContext.Caregivers.Any())
        {
            var caregiver1 = new Caregiver { Id = Guid.NewGuid(), Auth0Id = "123", Role = "Doctor", Name = "Emma Engberg", Email = "emma.e@example.com", };
            var caregiver2 = new Caregiver { Id = Guid.NewGuid(), Auth0Id = "456", Role = "Nurse", Name = "Marcus Nilsson", Email = "marcus.n@example.com" };
            var caregiver3 = new Caregiver { Id = Guid.NewGuid(), Auth0Id = "789", Role = "Doctor", Name = "Sandra Ask", Email = "sandra.a@example.com" };

            DbContext.Caregivers.Add(caregiver1);
            DbContext.Caregivers.Add(caregiver2);
            DbContext.Caregivers.Add(caregiver3);

            DbContext.SaveChanges();
        }
    }
}