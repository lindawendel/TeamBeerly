@page "/my_page"
@attribute [Authorize]
@inject ApplicationUserService ApplicationUserService
@inject AppointmentService appointmentService
@inject HealthCareContext DbContext
@inject AuthenticationStateProvider AuthenticationStateProvider

@if (patient != null)
{
    <h3>My patient page</h3>

    <div>
        <h5>Book an appointment</h5>
        <NavLink class="nav-link" href="booking">Click here</NavLink>
    </div>

    <h4 class="MyPage">Personal</h4>

    @if (!string.IsNullOrEmpty(profileImage))
    {
        <img src="@profileImage
        " alt="Profile Image" />
    }

    <div class="PatientProfile">
        <p><label>Name: @patient.Name</label></p
        <p><label>Date of Birth: @patient.DateOfBirth.ToString("yyyy-MM-dd")</label></p
        <p><label>Phonenumber: @patient.PhoneNumber</label></p
        <p><label>Email: @patient.Email</label></p
        <NavLink class="nav-link" href="my_page/profile"> Edit Profile </NavLink>
    </div>

    <div class="upcomingPatientAppointments">
        <h5>Upcoming Appointments</h5>
        <ol>     
            @foreach (var appointment in UpcomingAppointments)
            {
                <li>
                    <p>Date & Time: @appointment.StartTime</p>
                    <p>Caregiver: @appointment.Caregiver.Name</p>
                    <p> @appointment.Service</p>
                    <button @onclick="() => CancelAppointment(appointment)">Cancel appointment</button>
                </li>
            }
        </ol>
    </div>

    <div class="pastPatientAppointments">
        <h5>Past Appointments</h5>
        <ol>
            @foreach (var appointment in PastAppointments)
            {
                <li>
                    <p>Date & Time: @appointment.StartTime</p>
                    <p>Caregiver: @appointment.Caregiver.Name</p>
                    <p> @appointment.Service</p>
                </li>
            }
        </ol>
    </div>
}
else
{
    <p>NO ACCESS</p>
}

@code {
    private string profileImage;
    private List<Appointment> UpcomingAppointments = new List<Appointment>();
    private List<Appointment> PastAppointments = new List<Appointment>();
    private Patient patient;
    public bool access;

    protected override async Task OnInitializedAsync()
    {
        patient = await ApplicationUserService.GetCurrentPatient();
        profileImage = await ApplicationUserService.GetProfilePicture();

        GetAppointments();

        await base.OnInitializedAsync();
    }

    private void GetAppointments()
    {
        var now = DateTime.Now;

        if (patient != null)
        {
            UpcomingAppointments = DbContext.Appointments
                .Where(a => a.StartTime > now && a.Patient.Id == patient.Id)
                .Include(a => a.Caregiver)
                .OrderBy(a => a.StartTime)
                .ToList();

            PastAppointments = DbContext.Appointments
                .Where(a => a.StartTime < now && a.Patient.Id == patient.Id)
                .Include(a => a.Caregiver)
                .OrderByDescending(a => a.StartTime)
                .ToList();
        }
    }

    private async void CancelAppointment(Appointment appointment)
    {

        appointment.Patient = null;
        appointment.Service = null;
        appointment.Description = null;
        appointment.IsBooked = false;

        await DbContext.SaveChangesAsync();
    }
    
}
