@page "/profile"
@attribute [Authorize]
@inject HealthCareContext DbContext
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

@if (Caregiver != null)
{
    <NavLink class="nav-link" href="dashboard">Back</NavLink>

    <h3>Profile</h3>

    <div>
        <label>Name:</label>
        <input @bind="Caregiver.Name" />
    </div>

    <div>
        <label>Date of Birth:</label>
        <input @bind="Caregiver.DateOfBirth" />
    </div>

    <div>
        <label>Phone Number:</label>
        <input @bind="Caregiver.PhoneNumber" />
    </div>

    <div>
        <label>Email:</label>
        <input @bind="Caregiver.Email" />
    </div>

    <button @onclick="SaveCaregiverProfile">Save</button>
    @if (isSaveSuccessful)
    {
        <p style="color: green;">Changes saved successfully!</p>
        DelayedRedirect();
    }
}
else
{
    <p>NO ACCESS</p>
}

@code {
    private bool isSaveSuccessful = false;
    private Caregiver Caregiver;

    protected override void OnInitialized()
    {
        FetchUserDetails();
    }

    private async Task FetchUserDetails()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        var userId = authState.User.Claims
                   .Where(c => c.Type.Equals(ClaimTypes.NameIdentifier))
                   .Select(c => c.Value)
                   .FirstOrDefault() ?? string.Empty;

        GetCaregiver(userId);
    }

    private void GetCaregiver(string authId)
    {
        Caregiver = DbContext.Caregivers.FirstOrDefault(p => p.Auth0Id == authId);
    }

    private async Task SaveCaregiverProfile()
    {
        var existingCaregiver = await DbContext.Caregivers.FirstOrDefaultAsync(p => p.Auth0Id == Caregiver.Auth0Id);

        if (existingCaregiver != null)
        {
            existingCaregiver.Name = Caregiver.Name;
            existingCaregiver.DateOfBirth = Caregiver.DateOfBirth;
            existingCaregiver.PhoneNumber = Caregiver.PhoneNumber;
            existingCaregiver.Email = Caregiver.Email;
        }

        await DbContext.SaveChangesAsync();
        isSaveSuccessful = true;
    }

    private async Task DelayedRedirect()
    {
        await Task.Delay(1000);
        NavigationManager.NavigateTo("/dashboard");
    }
}