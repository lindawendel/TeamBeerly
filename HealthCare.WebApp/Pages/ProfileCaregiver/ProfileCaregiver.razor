@page "/profile"
@attribute [Authorize]
@inject HealthCareContext DbContext
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject ApplicationUserService ApplicationUserService

@if (caregiver != null)
{
    <NavLink class="nav-link" href="dashboard">Back</NavLink>

    <h3>Profile</h3>

    <div>
        <label>Name:</label>
        <input @bind="caregiver.Name" />
    </div>

    <div>
        <label>Date of Birth:</label>
        <input @bind="caregiver.DateOfBirth" />
    </div>

    <div>
        <label>Phone Number:</label>
        <input @bind="caregiver.PhoneNumber" />
    </div>

    <div>
        <label>Email:</label>
        <input @bind="caregiver.Email" />
    </div>

    <button @onclick="SaveCaregiverProfile">Save</button>
    @if (isSaveSuccessful)
    {
        <p style="color: green;">Changes saved successfully!</p>
        DelayedRedirect();
    }
}
else
{
    <p>NO ACCESS</p>
}

@code {
    private bool isSaveSuccessful = false;
    private Caregiver caregiver;

    protected override async Task OnInitializedAsync()
    {
        caregiver = await ApplicationUserService.GetCurrentCaregiver();

        await base.OnInitializedAsync();
    }

    private async Task SaveCaregiverProfile()
    {
        var existingCaregiver = await DbContext.Caregivers.FirstOrDefaultAsync(p => p.Auth0Id == caregiver.Auth0Id);

        if (existingCaregiver != null)
        {
            existingCaregiver.Name = caregiver.Name;
            existingCaregiver.DateOfBirth = caregiver.DateOfBirth;
            existingCaregiver.PhoneNumber = caregiver.PhoneNumber;
            existingCaregiver.Email = caregiver.Email;
        }

        await DbContext.SaveChangesAsync();
        isSaveSuccessful = true;
    }

    private async Task DelayedRedirect()
    {
        await Task.Delay(1000);
        NavigationManager.NavigateTo("/dashboard");
    }
}